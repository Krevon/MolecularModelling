universeBox = []
universePart = []
particlesnumber = 100
sideLenght = 200
cutOff = 3.5
digitsAfterComma = 1
dimensions = 3
boxPairs = []

def Main():
    boxSize, boxNumber = boxCreator()
    universeGen(universeBox)
    universeGen(boxPairs)

# Defines the size of boxes and their number through a monodimensional side
def boxCreator()
    fakeSL = sidelenght * 10 ** digitsAfterComma
    fakeCO = cutOff * 10 ** digitsAfterComma
    fakeBS = fakeSL / cutOff
    
    if fakeBS != int(fakeBS)
        fakeBS = int(fakeBS) + 1
    boxNumber = fakeSL / fakeBS
    while boxNumber != int(boxNumber):
        fakeBS += 1
        boxNumber = fakeSL / fakeBS
    boxSize = fakeBS / 10 ** digitsAfterComma
    return boxSize, boxNumber

def universeGen(uniType):
    # Universe = [[], [], [], ......] one for each box
    for boxX in range(boxNumber):
        for boxY in range(boxNumber):
            for boxZ in range(boxNumber):
                universeBox.append([])
    return uniType

#GENERATE PARTICLES AND ASSIGN THEM TO BOXES

def relativeBoxCoord():
    relBoxCoor = []
    for x in range(dimensions):
        for y in range(dimensions):
            for z in range(dimensions):
                relBoxCoor.append([x - 1, y - 1, z - 1])

def boxXYZtoUniLoc(x, y, z):
    uniCoor = x * 3 ** 2 + y * 3 + z
    return uniCoor
    
def boxUniLocToXYZ(uniLoc):
    if uniLoc > 3 ** 2:
        x = int(uniLoc / 3 ** 2)
        uniLoc -= x * 3 ** 2
        if uniLoc > 3:
            y = int(uniLoc / 3)
            z -= y * 3
    return x, y, z
            

def boxPairGen(box, boxPairs):
    for boxP in range(13)
        boxX, boxY, boxZ = boxUniLocToXYZ(box)
        boxX += relBoxCoor[boxP][0]
        boxY += relBoxCoor[boxP][1]
        boxZ += relBoxCoor[boxP][2]
        closeBoxLoc = boxXYZtoUniLoc(boxX, boxY, boxZ)
        boxPair[box].append(closeBoxLoc)
        
def stepProcedure():
    # Look in each box and for each particle check the interactions with others in that box
    for box in range(len(universeBox)):
        for p1 in range(len(universeBox[box])):
            p1coor = universePart[universeBox[box][p1]]
            for p2 in range(p1, len(universeBox[box])):
                p2coor = universePart[universeBox[box][p2]] # universeBox[box][p2] is the index of the particle's coord in universePart
                if distance(p1coor, p2coor) < cutOff
                    #LENNARD-JONES
            for pBox in range(len(boxPairs[box])):
                for p2 in range(len(universeBox[pBox])):
                    p2coor = universePart[universeBox[pBox][p2]]
                    if distance(p1coor, p2coor) < cutOff
                        #LENNARD-JONES

# universeBox is a simple list of boxes containing numbers related to particles, the numbers are related to the particle position
# in universePart 
                
        
